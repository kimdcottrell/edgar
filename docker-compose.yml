version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: images/api.Dockerfile
    env_file:
      - .env
    volumes:
      - ./api:/go/src/api
      - ./main.go:/go/src/main.go
      - ./go.mod:/go/src/go.mod
      - ./go.sum:/go/src/go.sum
    working_dir: /go/src
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.api-edgar-redirect-web-secure.redirectscheme.scheme=https
      - traefik.http.routers.api-edgar.middlewares=api-edgar-redirect-web-secure
      - traefik.http.routers.api-edgar-web.rule=Host(`api.edgar.dev`)
      - traefik.http.routers.api-edgar-web.entrypoints=web
      - traefik.http.routers.api-edgar-web-secure.rule=Host(`api.edgar.dev`)
      - traefik.http.routers.api-edgar-web-secure.tls=true
      - traefik.http.routers.api-edgar-web-secure.entrypoints=web-secure
      # if you have multiple ports exposed on the service, specify port in the web-secure service
      - traefik.http.services.api-edgar-web-secure.loadbalancer.server.port=8080
    networks:
      - default
      - proxy

  persistent_db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - persistent_db_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    labels:
      - traefik.enable=false
    networks:
      - default # removing this may cause dns issues between the containers, despite this dehavior supposedly being the default
    
  persistent_db_web:
    image: adminer
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.db-edgar-redirect-web-secure.redirectscheme.scheme=https
      - traefik.http.routers.db-edgar.middlewares=db-edgar-redirect-web-secure
      - traefik.http.routers.db-edgar-web.rule=Host(`db.edgar.dev`)
      - traefik.http.routers.db-edgar-web.entrypoints=web
      - traefik.http.routers.db-edgar-web-secure.rule=Host(`db.edgar.dev`)
      - traefik.http.routers.db-edgar-web-secure.tls=true
      - traefik.http.routers.db-edgar-web-secure.entrypoints=web-secure
      - traefik.http.services.db-edgar-web-secure.loadbalancer.server.port=8080
    networks:
      - proxy
      - default
    depends_on:
      - persistent_db

  in_memory_db:
    image: redis:7-bookworm
    ports:
      - "6379:6379"
    restart: on-failure
    volumes:
      - in_memory_db:/data
    networks:
      - default

volumes:
  persistent_db_data:
  in_memory_db:

networks:
  proxy:
    external: true
